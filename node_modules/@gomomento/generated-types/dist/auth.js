"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.auth = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.18.1
 * source: auth.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const pb_1 = __importStar(require("google-protobuf"));
const grpc_1 = __importStar(require("@grpc/grpc-js"));
var auth;
(function (auth) {
    var __LoginRequest_one_of_decls, __LoginResponse_one_of_decls, __GenerateApiTokenRequest_one_of_decls, __GenerateApiTokenResponse_one_of_decls, __RefreshApiTokenRequest_one_of_decls, __RefreshApiTokenResponse_one_of_decls;
    class _LoginRequest extends pb_1.Message {
        constructor(data) {
            super();
            __LoginRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __LoginRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data) {
            const message = new _LoginRequest({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _LoginRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _LoginRequest.deserialize(bytes);
        }
    }
    __LoginRequest_one_of_decls = new WeakMap();
    auth._LoginRequest = _LoginRequest;
    class _LoginResponse extends pb_1.Message {
        constructor(data) {
            super();
            __LoginResponse_one_of_decls.set(this, [[1, 2, 3, 4]]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __LoginResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("direct_browser" in data && data.direct_browser != undefined) {
                    this.direct_browser = data.direct_browser;
                }
                if ("logged_in" in data && data.logged_in != undefined) {
                    this.logged_in = data.logged_in;
                }
                if ("message" in data && data.message != undefined) {
                    this.message = data.message;
                }
                if ("error" in data && data.error != undefined) {
                    this.error = data.error;
                }
            }
        }
        get direct_browser() {
            return pb_1.Message.getWrapperField(this, _LoginResponse.DirectBrowser, 1);
        }
        set direct_browser(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __LoginResponse_one_of_decls, "f")[0], value);
        }
        get has_direct_browser() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get logged_in() {
            return pb_1.Message.getWrapperField(this, _LoginResponse.LoggedIn, 2);
        }
        set logged_in(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __LoginResponse_one_of_decls, "f")[0], value);
        }
        get has_logged_in() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get message() {
            return pb_1.Message.getWrapperField(this, _LoginResponse.Message, 3);
        }
        set message(value) {
            pb_1.Message.setOneofWrapperField(this, 3, __classPrivateFieldGet(this, __LoginResponse_one_of_decls, "f")[0], value);
        }
        get has_message() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get error() {
            return pb_1.Message.getWrapperField(this, _LoginResponse.Error, 4);
        }
        set error(value) {
            pb_1.Message.setOneofWrapperField(this, 4, __classPrivateFieldGet(this, __LoginResponse_one_of_decls, "f")[0], value);
        }
        get has_error() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get state() {
            const cases = {
                0: "none",
                1: "direct_browser",
                2: "logged_in",
                3: "message",
                4: "error"
            };
            return cases[pb_1.Message.computeOneofCase(this, [1, 2, 3, 4])];
        }
        static fromObject(data) {
            const message = new _LoginResponse({});
            if (data.direct_browser != null) {
                message.direct_browser = _LoginResponse.DirectBrowser.fromObject(data.direct_browser);
            }
            if (data.logged_in != null) {
                message.logged_in = _LoginResponse.LoggedIn.fromObject(data.logged_in);
            }
            if (data.message != null) {
                message.message = _LoginResponse.Message.fromObject(data.message);
            }
            if (data.error != null) {
                message.error = _LoginResponse.Error.fromObject(data.error);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.direct_browser != null) {
                data.direct_browser = this.direct_browser.toObject();
            }
            if (this.logged_in != null) {
                data.logged_in = this.logged_in.toObject();
            }
            if (this.message != null) {
                data.message = this.message.toObject();
            }
            if (this.error != null) {
                data.error = this.error.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_direct_browser)
                writer.writeMessage(1, this.direct_browser, () => this.direct_browser.serialize(writer));
            if (this.has_logged_in)
                writer.writeMessage(2, this.logged_in, () => this.logged_in.serialize(writer));
            if (this.has_message)
                writer.writeMessage(3, this.message, () => this.message.serialize(writer));
            if (this.has_error)
                writer.writeMessage(4, this.error, () => this.error.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _LoginResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.direct_browser, () => message.direct_browser = _LoginResponse.DirectBrowser.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.logged_in, () => message.logged_in = _LoginResponse.LoggedIn.deserialize(reader));
                        break;
                    case 3:
                        reader.readMessage(message.message, () => message.message = _LoginResponse.Message.deserialize(reader));
                        break;
                    case 4:
                        reader.readMessage(message.error, () => message.error = _LoginResponse.Error.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _LoginResponse.deserialize(bytes);
        }
    }
    __LoginResponse_one_of_decls = new WeakMap();
    auth._LoginResponse = _LoginResponse;
    (function (_LoginResponse) {
        var _LoggedIn_one_of_decls, _Error_one_of_decls, _DirectBrowser_one_of_decls, _Message_one_of_decls;
        class LoggedIn extends pb_1.Message {
            constructor(data) {
                super();
                _LoggedIn_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _LoggedIn_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("session_token" in data && data.session_token != undefined) {
                        this.session_token = data.session_token;
                    }
                    if ("valid_for_seconds" in data && data.valid_for_seconds != undefined) {
                        this.valid_for_seconds = data.valid_for_seconds;
                    }
                }
            }
            get session_token() {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            }
            set session_token(value) {
                pb_1.Message.setField(this, 1, value);
            }
            get valid_for_seconds() {
                return pb_1.Message.getFieldWithDefault(this, 2, 0);
            }
            set valid_for_seconds(value) {
                pb_1.Message.setField(this, 2, value);
            }
            static fromObject(data) {
                const message = new LoggedIn({});
                if (data.session_token != null) {
                    message.session_token = data.session_token;
                }
                if (data.valid_for_seconds != null) {
                    message.valid_for_seconds = data.valid_for_seconds;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.session_token != null) {
                    data.session_token = this.session_token;
                }
                if (this.valid_for_seconds != null) {
                    data.valid_for_seconds = this.valid_for_seconds;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.session_token.length)
                    writer.writeString(1, this.session_token);
                if (this.valid_for_seconds != 0)
                    writer.writeUint32(2, this.valid_for_seconds);
                if (!w)
                    return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new LoggedIn();
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        case 1:
                            message.session_token = reader.readString();
                            break;
                        case 2:
                            message.valid_for_seconds = reader.readUint32();
                            break;
                        default: reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return LoggedIn.deserialize(bytes);
            }
        }
        _LoggedIn_one_of_decls = new WeakMap();
        _LoginResponse.LoggedIn = LoggedIn;
        class Error extends pb_1.Message {
            constructor(data) {
                super();
                _Error_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _Error_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("description" in data && data.description != undefined) {
                        this.description = data.description;
                    }
                }
            }
            get description() {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            }
            set description(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new Error({});
                if (data.description != null) {
                    message.description = data.description;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.description != null) {
                    data.description = this.description;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.description.length)
                    writer.writeString(1, this.description);
                if (!w)
                    return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Error();
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        case 1:
                            message.description = reader.readString();
                            break;
                        default: reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return Error.deserialize(bytes);
            }
        }
        _Error_one_of_decls = new WeakMap();
        _LoginResponse.Error = Error;
        class DirectBrowser extends pb_1.Message {
            constructor(data) {
                super();
                _DirectBrowser_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _DirectBrowser_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("url" in data && data.url != undefined) {
                        this.url = data.url;
                    }
                }
            }
            get url() {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            }
            set url(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new DirectBrowser({});
                if (data.url != null) {
                    message.url = data.url;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.url != null) {
                    data.url = this.url;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.url.length)
                    writer.writeString(1, this.url);
                if (!w)
                    return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DirectBrowser();
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        case 1:
                            message.url = reader.readString();
                            break;
                        default: reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return DirectBrowser.deserialize(bytes);
            }
        }
        _DirectBrowser_one_of_decls = new WeakMap();
        _LoginResponse.DirectBrowser = DirectBrowser;
        class Message extends pb_1.Message {
            constructor(data) {
                super();
                _Message_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _Message_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("text" in data && data.text != undefined) {
                        this.text = data.text;
                    }
                }
            }
            get text() {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            }
            set text(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new Message({});
                if (data.text != null) {
                    message.text = data.text;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.text != null) {
                    data.text = this.text;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.text.length)
                    writer.writeString(1, this.text);
                if (!w)
                    return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Message();
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        case 1:
                            message.text = reader.readString();
                            break;
                        default: reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return Message.deserialize(bytes);
            }
        }
        _Message_one_of_decls = new WeakMap();
        _LoginResponse.Message = Message;
    })(_LoginResponse = auth._LoginResponse || (auth._LoginResponse = {}));
    class _GenerateApiTokenRequest extends pb_1.Message {
        constructor(data) {
            super();
            __GenerateApiTokenRequest_one_of_decls.set(this, [[1, 2]]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __GenerateApiTokenRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("never" in data && data.never != undefined) {
                    this.never = data.never;
                }
                if ("expires" in data && data.expires != undefined) {
                    this.expires = data.expires;
                }
                if ("auth_token" in data && data.auth_token != undefined) {
                    this.auth_token = data.auth_token;
                }
                if ("permissions" in data && data.permissions != undefined) {
                    this.permissions = data.permissions;
                }
            }
        }
        get never() {
            return pb_1.Message.getWrapperField(this, _GenerateApiTokenRequest.Never, 1);
        }
        set never(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __GenerateApiTokenRequest_one_of_decls, "f")[0], value);
        }
        get has_never() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get expires() {
            return pb_1.Message.getWrapperField(this, _GenerateApiTokenRequest.Expires, 2);
        }
        set expires(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __GenerateApiTokenRequest_one_of_decls, "f")[0], value);
        }
        get has_expires() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get auth_token() {
            return pb_1.Message.getFieldWithDefault(this, 3, "");
        }
        set auth_token(value) {
            pb_1.Message.setField(this, 3, value);
        }
        get permissions() {
            return pb_1.Message.getWrapperField(this, _GenerateApiTokenRequest.Permissions, 4);
        }
        set permissions(value) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get has_permissions() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get expiry() {
            const cases = {
                0: "none",
                1: "never",
                2: "expires"
            };
            return cases[pb_1.Message.computeOneofCase(this, [1, 2])];
        }
        static fromObject(data) {
            const message = new _GenerateApiTokenRequest({});
            if (data.never != null) {
                message.never = _GenerateApiTokenRequest.Never.fromObject(data.never);
            }
            if (data.expires != null) {
                message.expires = _GenerateApiTokenRequest.Expires.fromObject(data.expires);
            }
            if (data.auth_token != null) {
                message.auth_token = data.auth_token;
            }
            if (data.permissions != null) {
                message.permissions = _GenerateApiTokenRequest.Permissions.fromObject(data.permissions);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.never != null) {
                data.never = this.never.toObject();
            }
            if (this.expires != null) {
                data.expires = this.expires.toObject();
            }
            if (this.auth_token != null) {
                data.auth_token = this.auth_token;
            }
            if (this.permissions != null) {
                data.permissions = this.permissions.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_never)
                writer.writeMessage(1, this.never, () => this.never.serialize(writer));
            if (this.has_expires)
                writer.writeMessage(2, this.expires, () => this.expires.serialize(writer));
            if (this.auth_token.length)
                writer.writeString(3, this.auth_token);
            if (this.has_permissions)
                writer.writeMessage(4, this.permissions, () => this.permissions.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _GenerateApiTokenRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.never, () => message.never = _GenerateApiTokenRequest.Never.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.expires, () => message.expires = _GenerateApiTokenRequest.Expires.deserialize(reader));
                        break;
                    case 3:
                        message.auth_token = reader.readString();
                        break;
                    case 4:
                        reader.readMessage(message.permissions, () => message.permissions = _GenerateApiTokenRequest.Permissions.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _GenerateApiTokenRequest.deserialize(bytes);
        }
    }
    __GenerateApiTokenRequest_one_of_decls = new WeakMap();
    auth._GenerateApiTokenRequest = _GenerateApiTokenRequest;
    (function (_GenerateApiTokenRequest) {
        var _Never_one_of_decls, _Expires_one_of_decls, _Permissions_one_of_decls, _ExplicitPermissions_one_of_decls, _PermissionsType_one_of_decls;
        let CacheRole;
        (function (CacheRole) {
            CacheRole[CacheRole["CachePermitNone"] = 0] = "CachePermitNone";
            CacheRole[CacheRole["CacheReadWrite"] = 1] = "CacheReadWrite";
            CacheRole[CacheRole["CacheReadOnly"] = 2] = "CacheReadOnly";
            CacheRole[CacheRole["CacheWriteOnly"] = 3] = "CacheWriteOnly";
        })(CacheRole = _GenerateApiTokenRequest.CacheRole || (_GenerateApiTokenRequest.CacheRole = {}));
        let TopicRole;
        (function (TopicRole) {
            TopicRole[TopicRole["TopicPermitNone"] = 0] = "TopicPermitNone";
            TopicRole[TopicRole["TopicReadWrite"] = 1] = "TopicReadWrite";
            TopicRole[TopicRole["TopicReadOnly"] = 2] = "TopicReadOnly";
            TopicRole[TopicRole["TopicWriteOnly"] = 3] = "TopicWriteOnly";
        })(TopicRole = _GenerateApiTokenRequest.TopicRole || (_GenerateApiTokenRequest.TopicRole = {}));
        let SuperUserPermissions;
        (function (SuperUserPermissions) {
            SuperUserPermissions[SuperUserPermissions["SuperUser"] = 0] = "SuperUser";
        })(SuperUserPermissions = _GenerateApiTokenRequest.SuperUserPermissions || (_GenerateApiTokenRequest.SuperUserPermissions = {}));
        class Never extends pb_1.Message {
            constructor(data) {
                super();
                _Never_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _Never_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") { }
            }
            static fromObject(data) {
                const message = new Never({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w)
                    return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Never();
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        default: reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return Never.deserialize(bytes);
            }
        }
        _Never_one_of_decls = new WeakMap();
        _GenerateApiTokenRequest.Never = Never;
        class Expires extends pb_1.Message {
            constructor(data) {
                super();
                _Expires_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _Expires_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("valid_for_seconds" in data && data.valid_for_seconds != undefined) {
                        this.valid_for_seconds = data.valid_for_seconds;
                    }
                }
            }
            get valid_for_seconds() {
                return pb_1.Message.getFieldWithDefault(this, 1, 0);
            }
            set valid_for_seconds(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new Expires({});
                if (data.valid_for_seconds != null) {
                    message.valid_for_seconds = data.valid_for_seconds;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.valid_for_seconds != null) {
                    data.valid_for_seconds = this.valid_for_seconds;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.valid_for_seconds != 0)
                    writer.writeUint32(1, this.valid_for_seconds);
                if (!w)
                    return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Expires();
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        case 1:
                            message.valid_for_seconds = reader.readUint32();
                            break;
                        default: reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return Expires.deserialize(bytes);
            }
        }
        _Expires_one_of_decls = new WeakMap();
        _GenerateApiTokenRequest.Expires = Expires;
        class Permissions extends pb_1.Message {
            constructor(data) {
                super();
                _Permissions_one_of_decls.set(this, [[1, 2]]);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _Permissions_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("super_user" in data && data.super_user != undefined) {
                        this.super_user = data.super_user;
                    }
                    if ("explicit" in data && data.explicit != undefined) {
                        this.explicit = data.explicit;
                    }
                }
            }
            get super_user() {
                return pb_1.Message.getFieldWithDefault(this, 1, _GenerateApiTokenRequest.SuperUserPermissions.SuperUser);
            }
            set super_user(value) {
                pb_1.Message.setOneofField(this, 1, __classPrivateFieldGet(this, _Permissions_one_of_decls, "f")[0], value);
            }
            get has_super_user() {
                return pb_1.Message.getField(this, 1) != null;
            }
            get explicit() {
                return pb_1.Message.getWrapperField(this, _GenerateApiTokenRequest.ExplicitPermissions, 2);
            }
            set explicit(value) {
                pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, _Permissions_one_of_decls, "f")[0], value);
            }
            get has_explicit() {
                return pb_1.Message.getField(this, 2) != null;
            }
            get kind() {
                const cases = {
                    0: "none",
                    1: "super_user",
                    2: "explicit"
                };
                return cases[pb_1.Message.computeOneofCase(this, [1, 2])];
            }
            static fromObject(data) {
                const message = new Permissions({});
                if (data.super_user != null) {
                    message.super_user = data.super_user;
                }
                if (data.explicit != null) {
                    message.explicit = _GenerateApiTokenRequest.ExplicitPermissions.fromObject(data.explicit);
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.super_user != null) {
                    data.super_user = this.super_user;
                }
                if (this.explicit != null) {
                    data.explicit = this.explicit.toObject();
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.has_super_user)
                    writer.writeEnum(1, this.super_user);
                if (this.has_explicit)
                    writer.writeMessage(2, this.explicit, () => this.explicit.serialize(writer));
                if (!w)
                    return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Permissions();
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        case 1:
                            message.super_user = reader.readEnum();
                            break;
                        case 2:
                            reader.readMessage(message.explicit, () => message.explicit = _GenerateApiTokenRequest.ExplicitPermissions.deserialize(reader));
                            break;
                        default: reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return Permissions.deserialize(bytes);
            }
        }
        _Permissions_one_of_decls = new WeakMap();
        _GenerateApiTokenRequest.Permissions = Permissions;
        class ExplicitPermissions extends pb_1.Message {
            constructor(data) {
                super();
                _ExplicitPermissions_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], __classPrivateFieldGet(this, _ExplicitPermissions_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("permissions" in data && data.permissions != undefined) {
                        this.permissions = data.permissions;
                    }
                }
            }
            get permissions() {
                return pb_1.Message.getRepeatedWrapperField(this, _GenerateApiTokenRequest.PermissionsType, 1);
            }
            set permissions(value) {
                pb_1.Message.setRepeatedWrapperField(this, 1, value);
            }
            static fromObject(data) {
                const message = new ExplicitPermissions({});
                if (data.permissions != null) {
                    message.permissions = data.permissions.map(item => _GenerateApiTokenRequest.PermissionsType.fromObject(item));
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.permissions != null) {
                    data.permissions = this.permissions.map((item) => item.toObject());
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.permissions.length)
                    writer.writeRepeatedMessage(1, this.permissions, (item) => item.serialize(writer));
                if (!w)
                    return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ExplicitPermissions();
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        case 1:
                            reader.readMessage(message.permissions, () => pb_1.Message.addToRepeatedWrapperField(message, 1, _GenerateApiTokenRequest.PermissionsType.deserialize(reader), _GenerateApiTokenRequest.PermissionsType));
                            break;
                        default: reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return ExplicitPermissions.deserialize(bytes);
            }
        }
        _ExplicitPermissions_one_of_decls = new WeakMap();
        _GenerateApiTokenRequest.ExplicitPermissions = ExplicitPermissions;
        class PermissionsType extends pb_1.Message {
            constructor(data) {
                super();
                _PermissionsType_one_of_decls.set(this, [[1, 2]]);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _PermissionsType_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("cache_permissions" in data && data.cache_permissions != undefined) {
                        this.cache_permissions = data.cache_permissions;
                    }
                    if ("topic_permissions" in data && data.topic_permissions != undefined) {
                        this.topic_permissions = data.topic_permissions;
                    }
                }
            }
            get cache_permissions() {
                return pb_1.Message.getWrapperField(this, _GenerateApiTokenRequest.PermissionsType.CachePermissions, 1);
            }
            set cache_permissions(value) {
                pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, _PermissionsType_one_of_decls, "f")[0], value);
            }
            get has_cache_permissions() {
                return pb_1.Message.getField(this, 1) != null;
            }
            get topic_permissions() {
                return pb_1.Message.getWrapperField(this, _GenerateApiTokenRequest.PermissionsType.TopicPermissions, 2);
            }
            set topic_permissions(value) {
                pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, _PermissionsType_one_of_decls, "f")[0], value);
            }
            get has_topic_permissions() {
                return pb_1.Message.getField(this, 2) != null;
            }
            get kind() {
                const cases = {
                    0: "none",
                    1: "cache_permissions",
                    2: "topic_permissions"
                };
                return cases[pb_1.Message.computeOneofCase(this, [1, 2])];
            }
            static fromObject(data) {
                const message = new PermissionsType({});
                if (data.cache_permissions != null) {
                    message.cache_permissions = _GenerateApiTokenRequest.PermissionsType.CachePermissions.fromObject(data.cache_permissions);
                }
                if (data.topic_permissions != null) {
                    message.topic_permissions = _GenerateApiTokenRequest.PermissionsType.TopicPermissions.fromObject(data.topic_permissions);
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.cache_permissions != null) {
                    data.cache_permissions = this.cache_permissions.toObject();
                }
                if (this.topic_permissions != null) {
                    data.topic_permissions = this.topic_permissions.toObject();
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.has_cache_permissions)
                    writer.writeMessage(1, this.cache_permissions, () => this.cache_permissions.serialize(writer));
                if (this.has_topic_permissions)
                    writer.writeMessage(2, this.topic_permissions, () => this.topic_permissions.serialize(writer));
                if (!w)
                    return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PermissionsType();
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        case 1:
                            reader.readMessage(message.cache_permissions, () => message.cache_permissions = _GenerateApiTokenRequest.PermissionsType.CachePermissions.deserialize(reader));
                            break;
                        case 2:
                            reader.readMessage(message.topic_permissions, () => message.topic_permissions = _GenerateApiTokenRequest.PermissionsType.TopicPermissions.deserialize(reader));
                            break;
                        default: reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return PermissionsType.deserialize(bytes);
            }
        }
        _PermissionsType_one_of_decls = new WeakMap();
        _GenerateApiTokenRequest.PermissionsType = PermissionsType;
        (function (PermissionsType) {
            var _All_one_of_decls, _CacheSelector_one_of_decls, _CacheItemSelector_one_of_decls, _CachePermissions_one_of_decls, _TopicSelector_one_of_decls, _TopicPermissions_one_of_decls;
            class All extends pb_1.Message {
                constructor(data) {
                    super();
                    _All_one_of_decls.set(this, []);
                    pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _All_one_of_decls, "f"));
                    if (!Array.isArray(data) && typeof data == "object") { }
                }
                static fromObject(data) {
                    const message = new All({});
                    return message;
                }
                toObject() {
                    const data = {};
                    return data;
                }
                serialize(w) {
                    const writer = w || new pb_1.BinaryWriter();
                    if (!w)
                        return writer.getResultBuffer();
                }
                static deserialize(bytes) {
                    const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new All();
                    while (reader.nextField()) {
                        if (reader.isEndGroup())
                            break;
                        switch (reader.getFieldNumber()) {
                            default: reader.skipField();
                        }
                    }
                    return message;
                }
                serializeBinary() {
                    return this.serialize();
                }
                static deserializeBinary(bytes) {
                    return All.deserialize(bytes);
                }
            }
            _All_one_of_decls = new WeakMap();
            PermissionsType.All = All;
            class CacheSelector extends pb_1.Message {
                constructor(data) {
                    super();
                    _CacheSelector_one_of_decls.set(this, [[1]]);
                    pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _CacheSelector_one_of_decls, "f"));
                    if (!Array.isArray(data) && typeof data == "object") {
                        if ("cache_name" in data && data.cache_name != undefined) {
                            this.cache_name = data.cache_name;
                        }
                    }
                }
                get cache_name() {
                    return pb_1.Message.getFieldWithDefault(this, 1, "");
                }
                set cache_name(value) {
                    pb_1.Message.setOneofField(this, 1, __classPrivateFieldGet(this, _CacheSelector_one_of_decls, "f")[0], value);
                }
                get has_cache_name() {
                    return pb_1.Message.getField(this, 1) != null;
                }
                get kind() {
                    const cases = {
                        0: "none",
                        1: "cache_name"
                    };
                    return cases[pb_1.Message.computeOneofCase(this, [1])];
                }
                static fromObject(data) {
                    const message = new CacheSelector({});
                    if (data.cache_name != null) {
                        message.cache_name = data.cache_name;
                    }
                    return message;
                }
                toObject() {
                    const data = {};
                    if (this.cache_name != null) {
                        data.cache_name = this.cache_name;
                    }
                    return data;
                }
                serialize(w) {
                    const writer = w || new pb_1.BinaryWriter();
                    if (this.has_cache_name)
                        writer.writeString(1, this.cache_name);
                    if (!w)
                        return writer.getResultBuffer();
                }
                static deserialize(bytes) {
                    const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CacheSelector();
                    while (reader.nextField()) {
                        if (reader.isEndGroup())
                            break;
                        switch (reader.getFieldNumber()) {
                            case 1:
                                message.cache_name = reader.readString();
                                break;
                            default: reader.skipField();
                        }
                    }
                    return message;
                }
                serializeBinary() {
                    return this.serialize();
                }
                static deserializeBinary(bytes) {
                    return CacheSelector.deserialize(bytes);
                }
            }
            _CacheSelector_one_of_decls = new WeakMap();
            PermissionsType.CacheSelector = CacheSelector;
            class CacheItemSelector extends pb_1.Message {
                constructor(data) {
                    super();
                    _CacheItemSelector_one_of_decls.set(this, [[1, 2]]);
                    pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _CacheItemSelector_one_of_decls, "f"));
                    if (!Array.isArray(data) && typeof data == "object") {
                        if ("key" in data && data.key != undefined) {
                            this.key = data.key;
                        }
                        if ("key_prefix" in data && data.key_prefix != undefined) {
                            this.key_prefix = data.key_prefix;
                        }
                    }
                }
                get key() {
                    return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
                }
                set key(value) {
                    pb_1.Message.setOneofField(this, 1, __classPrivateFieldGet(this, _CacheItemSelector_one_of_decls, "f")[0], value);
                }
                get has_key() {
                    return pb_1.Message.getField(this, 1) != null;
                }
                get key_prefix() {
                    return pb_1.Message.getFieldWithDefault(this, 2, new Uint8Array(0));
                }
                set key_prefix(value) {
                    pb_1.Message.setOneofField(this, 2, __classPrivateFieldGet(this, _CacheItemSelector_one_of_decls, "f")[0], value);
                }
                get has_key_prefix() {
                    return pb_1.Message.getField(this, 2) != null;
                }
                get kind() {
                    const cases = {
                        0: "none",
                        1: "key",
                        2: "key_prefix"
                    };
                    return cases[pb_1.Message.computeOneofCase(this, [1, 2])];
                }
                static fromObject(data) {
                    const message = new CacheItemSelector({});
                    if (data.key != null) {
                        message.key = data.key;
                    }
                    if (data.key_prefix != null) {
                        message.key_prefix = data.key_prefix;
                    }
                    return message;
                }
                toObject() {
                    const data = {};
                    if (this.key != null) {
                        data.key = this.key;
                    }
                    if (this.key_prefix != null) {
                        data.key_prefix = this.key_prefix;
                    }
                    return data;
                }
                serialize(w) {
                    const writer = w || new pb_1.BinaryWriter();
                    if (this.has_key)
                        writer.writeBytes(1, this.key);
                    if (this.has_key_prefix)
                        writer.writeBytes(2, this.key_prefix);
                    if (!w)
                        return writer.getResultBuffer();
                }
                static deserialize(bytes) {
                    const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CacheItemSelector();
                    while (reader.nextField()) {
                        if (reader.isEndGroup())
                            break;
                        switch (reader.getFieldNumber()) {
                            case 1:
                                message.key = reader.readBytes();
                                break;
                            case 2:
                                message.key_prefix = reader.readBytes();
                                break;
                            default: reader.skipField();
                        }
                    }
                    return message;
                }
                serializeBinary() {
                    return this.serialize();
                }
                static deserializeBinary(bytes) {
                    return CacheItemSelector.deserialize(bytes);
                }
            }
            _CacheItemSelector_one_of_decls = new WeakMap();
            PermissionsType.CacheItemSelector = CacheItemSelector;
            class CachePermissions extends pb_1.Message {
                constructor(data) {
                    super();
                    _CachePermissions_one_of_decls.set(this, [[2, 3], [4, 5]]);
                    pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _CachePermissions_one_of_decls, "f"));
                    if (!Array.isArray(data) && typeof data == "object") {
                        if ("role" in data && data.role != undefined) {
                            this.role = data.role;
                        }
                        if ("all_caches" in data && data.all_caches != undefined) {
                            this.all_caches = data.all_caches;
                        }
                        if ("cache_selector" in data && data.cache_selector != undefined) {
                            this.cache_selector = data.cache_selector;
                        }
                        if ("all_items" in data && data.all_items != undefined) {
                            this.all_items = data.all_items;
                        }
                        if ("item_selector" in data && data.item_selector != undefined) {
                            this.item_selector = data.item_selector;
                        }
                    }
                }
                get role() {
                    return pb_1.Message.getFieldWithDefault(this, 1, _GenerateApiTokenRequest.CacheRole.CachePermitNone);
                }
                set role(value) {
                    pb_1.Message.setField(this, 1, value);
                }
                get all_caches() {
                    return pb_1.Message.getWrapperField(this, _GenerateApiTokenRequest.PermissionsType.All, 2);
                }
                set all_caches(value) {
                    pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, _CachePermissions_one_of_decls, "f")[0], value);
                }
                get has_all_caches() {
                    return pb_1.Message.getField(this, 2) != null;
                }
                get cache_selector() {
                    return pb_1.Message.getWrapperField(this, _GenerateApiTokenRequest.PermissionsType.CacheSelector, 3);
                }
                set cache_selector(value) {
                    pb_1.Message.setOneofWrapperField(this, 3, __classPrivateFieldGet(this, _CachePermissions_one_of_decls, "f")[0], value);
                }
                get has_cache_selector() {
                    return pb_1.Message.getField(this, 3) != null;
                }
                get all_items() {
                    return pb_1.Message.getWrapperField(this, _GenerateApiTokenRequest.PermissionsType.All, 4);
                }
                set all_items(value) {
                    pb_1.Message.setOneofWrapperField(this, 4, __classPrivateFieldGet(this, _CachePermissions_one_of_decls, "f")[1], value);
                }
                get has_all_items() {
                    return pb_1.Message.getField(this, 4) != null;
                }
                get item_selector() {
                    return pb_1.Message.getWrapperField(this, _GenerateApiTokenRequest.PermissionsType.CacheItemSelector, 5);
                }
                set item_selector(value) {
                    pb_1.Message.setOneofWrapperField(this, 5, __classPrivateFieldGet(this, _CachePermissions_one_of_decls, "f")[1], value);
                }
                get has_item_selector() {
                    return pb_1.Message.getField(this, 5) != null;
                }
                get cache() {
                    const cases = {
                        0: "none",
                        2: "all_caches",
                        3: "cache_selector"
                    };
                    return cases[pb_1.Message.computeOneofCase(this, [2, 3])];
                }
                get cache_item() {
                    const cases = {
                        0: "none",
                        4: "all_items",
                        5: "item_selector"
                    };
                    return cases[pb_1.Message.computeOneofCase(this, [4, 5])];
                }
                static fromObject(data) {
                    const message = new CachePermissions({});
                    if (data.role != null) {
                        message.role = data.role;
                    }
                    if (data.all_caches != null) {
                        message.all_caches = _GenerateApiTokenRequest.PermissionsType.All.fromObject(data.all_caches);
                    }
                    if (data.cache_selector != null) {
                        message.cache_selector = _GenerateApiTokenRequest.PermissionsType.CacheSelector.fromObject(data.cache_selector);
                    }
                    if (data.all_items != null) {
                        message.all_items = _GenerateApiTokenRequest.PermissionsType.All.fromObject(data.all_items);
                    }
                    if (data.item_selector != null) {
                        message.item_selector = _GenerateApiTokenRequest.PermissionsType.CacheItemSelector.fromObject(data.item_selector);
                    }
                    return message;
                }
                toObject() {
                    const data = {};
                    if (this.role != null) {
                        data.role = this.role;
                    }
                    if (this.all_caches != null) {
                        data.all_caches = this.all_caches.toObject();
                    }
                    if (this.cache_selector != null) {
                        data.cache_selector = this.cache_selector.toObject();
                    }
                    if (this.all_items != null) {
                        data.all_items = this.all_items.toObject();
                    }
                    if (this.item_selector != null) {
                        data.item_selector = this.item_selector.toObject();
                    }
                    return data;
                }
                serialize(w) {
                    const writer = w || new pb_1.BinaryWriter();
                    if (this.role != _GenerateApiTokenRequest.CacheRole.CachePermitNone)
                        writer.writeEnum(1, this.role);
                    if (this.has_all_caches)
                        writer.writeMessage(2, this.all_caches, () => this.all_caches.serialize(writer));
                    if (this.has_cache_selector)
                        writer.writeMessage(3, this.cache_selector, () => this.cache_selector.serialize(writer));
                    if (this.has_all_items)
                        writer.writeMessage(4, this.all_items, () => this.all_items.serialize(writer));
                    if (this.has_item_selector)
                        writer.writeMessage(5, this.item_selector, () => this.item_selector.serialize(writer));
                    if (!w)
                        return writer.getResultBuffer();
                }
                static deserialize(bytes) {
                    const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CachePermissions();
                    while (reader.nextField()) {
                        if (reader.isEndGroup())
                            break;
                        switch (reader.getFieldNumber()) {
                            case 1:
                                message.role = reader.readEnum();
                                break;
                            case 2:
                                reader.readMessage(message.all_caches, () => message.all_caches = _GenerateApiTokenRequest.PermissionsType.All.deserialize(reader));
                                break;
                            case 3:
                                reader.readMessage(message.cache_selector, () => message.cache_selector = _GenerateApiTokenRequest.PermissionsType.CacheSelector.deserialize(reader));
                                break;
                            case 4:
                                reader.readMessage(message.all_items, () => message.all_items = _GenerateApiTokenRequest.PermissionsType.All.deserialize(reader));
                                break;
                            case 5:
                                reader.readMessage(message.item_selector, () => message.item_selector = _GenerateApiTokenRequest.PermissionsType.CacheItemSelector.deserialize(reader));
                                break;
                            default: reader.skipField();
                        }
                    }
                    return message;
                }
                serializeBinary() {
                    return this.serialize();
                }
                static deserializeBinary(bytes) {
                    return CachePermissions.deserialize(bytes);
                }
            }
            _CachePermissions_one_of_decls = new WeakMap();
            PermissionsType.CachePermissions = CachePermissions;
            class TopicSelector extends pb_1.Message {
                constructor(data) {
                    super();
                    _TopicSelector_one_of_decls.set(this, [[1]]);
                    pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _TopicSelector_one_of_decls, "f"));
                    if (!Array.isArray(data) && typeof data == "object") {
                        if ("topic_name" in data && data.topic_name != undefined) {
                            this.topic_name = data.topic_name;
                        }
                    }
                }
                get topic_name() {
                    return pb_1.Message.getFieldWithDefault(this, 1, "");
                }
                set topic_name(value) {
                    pb_1.Message.setOneofField(this, 1, __classPrivateFieldGet(this, _TopicSelector_one_of_decls, "f")[0], value);
                }
                get has_topic_name() {
                    return pb_1.Message.getField(this, 1) != null;
                }
                get kind() {
                    const cases = {
                        0: "none",
                        1: "topic_name"
                    };
                    return cases[pb_1.Message.computeOneofCase(this, [1])];
                }
                static fromObject(data) {
                    const message = new TopicSelector({});
                    if (data.topic_name != null) {
                        message.topic_name = data.topic_name;
                    }
                    return message;
                }
                toObject() {
                    const data = {};
                    if (this.topic_name != null) {
                        data.topic_name = this.topic_name;
                    }
                    return data;
                }
                serialize(w) {
                    const writer = w || new pb_1.BinaryWriter();
                    if (this.has_topic_name)
                        writer.writeString(1, this.topic_name);
                    if (!w)
                        return writer.getResultBuffer();
                }
                static deserialize(bytes) {
                    const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TopicSelector();
                    while (reader.nextField()) {
                        if (reader.isEndGroup())
                            break;
                        switch (reader.getFieldNumber()) {
                            case 1:
                                message.topic_name = reader.readString();
                                break;
                            default: reader.skipField();
                        }
                    }
                    return message;
                }
                serializeBinary() {
                    return this.serialize();
                }
                static deserializeBinary(bytes) {
                    return TopicSelector.deserialize(bytes);
                }
            }
            _TopicSelector_one_of_decls = new WeakMap();
            PermissionsType.TopicSelector = TopicSelector;
            class TopicPermissions extends pb_1.Message {
                constructor(data) {
                    super();
                    _TopicPermissions_one_of_decls.set(this, [[2, 3], [4, 5]]);
                    pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _TopicPermissions_one_of_decls, "f"));
                    if (!Array.isArray(data) && typeof data == "object") {
                        if ("role" in data && data.role != undefined) {
                            this.role = data.role;
                        }
                        if ("all_caches" in data && data.all_caches != undefined) {
                            this.all_caches = data.all_caches;
                        }
                        if ("cache_selector" in data && data.cache_selector != undefined) {
                            this.cache_selector = data.cache_selector;
                        }
                        if ("all_topics" in data && data.all_topics != undefined) {
                            this.all_topics = data.all_topics;
                        }
                        if ("topic_selector" in data && data.topic_selector != undefined) {
                            this.topic_selector = data.topic_selector;
                        }
                    }
                }
                get role() {
                    return pb_1.Message.getFieldWithDefault(this, 1, _GenerateApiTokenRequest.TopicRole.TopicPermitNone);
                }
                set role(value) {
                    pb_1.Message.setField(this, 1, value);
                }
                get all_caches() {
                    return pb_1.Message.getWrapperField(this, _GenerateApiTokenRequest.PermissionsType.All, 2);
                }
                set all_caches(value) {
                    pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, _TopicPermissions_one_of_decls, "f")[0], value);
                }
                get has_all_caches() {
                    return pb_1.Message.getField(this, 2) != null;
                }
                get cache_selector() {
                    return pb_1.Message.getWrapperField(this, _GenerateApiTokenRequest.PermissionsType.CacheSelector, 3);
                }
                set cache_selector(value) {
                    pb_1.Message.setOneofWrapperField(this, 3, __classPrivateFieldGet(this, _TopicPermissions_one_of_decls, "f")[0], value);
                }
                get has_cache_selector() {
                    return pb_1.Message.getField(this, 3) != null;
                }
                get all_topics() {
                    return pb_1.Message.getWrapperField(this, _GenerateApiTokenRequest.PermissionsType.All, 4);
                }
                set all_topics(value) {
                    pb_1.Message.setOneofWrapperField(this, 4, __classPrivateFieldGet(this, _TopicPermissions_one_of_decls, "f")[1], value);
                }
                get has_all_topics() {
                    return pb_1.Message.getField(this, 4) != null;
                }
                get topic_selector() {
                    return pb_1.Message.getWrapperField(this, _GenerateApiTokenRequest.PermissionsType.TopicSelector, 5);
                }
                set topic_selector(value) {
                    pb_1.Message.setOneofWrapperField(this, 5, __classPrivateFieldGet(this, _TopicPermissions_one_of_decls, "f")[1], value);
                }
                get has_topic_selector() {
                    return pb_1.Message.getField(this, 5) != null;
                }
                get cache() {
                    const cases = {
                        0: "none",
                        2: "all_caches",
                        3: "cache_selector"
                    };
                    return cases[pb_1.Message.computeOneofCase(this, [2, 3])];
                }
                get topic() {
                    const cases = {
                        0: "none",
                        4: "all_topics",
                        5: "topic_selector"
                    };
                    return cases[pb_1.Message.computeOneofCase(this, [4, 5])];
                }
                static fromObject(data) {
                    const message = new TopicPermissions({});
                    if (data.role != null) {
                        message.role = data.role;
                    }
                    if (data.all_caches != null) {
                        message.all_caches = _GenerateApiTokenRequest.PermissionsType.All.fromObject(data.all_caches);
                    }
                    if (data.cache_selector != null) {
                        message.cache_selector = _GenerateApiTokenRequest.PermissionsType.CacheSelector.fromObject(data.cache_selector);
                    }
                    if (data.all_topics != null) {
                        message.all_topics = _GenerateApiTokenRequest.PermissionsType.All.fromObject(data.all_topics);
                    }
                    if (data.topic_selector != null) {
                        message.topic_selector = _GenerateApiTokenRequest.PermissionsType.TopicSelector.fromObject(data.topic_selector);
                    }
                    return message;
                }
                toObject() {
                    const data = {};
                    if (this.role != null) {
                        data.role = this.role;
                    }
                    if (this.all_caches != null) {
                        data.all_caches = this.all_caches.toObject();
                    }
                    if (this.cache_selector != null) {
                        data.cache_selector = this.cache_selector.toObject();
                    }
                    if (this.all_topics != null) {
                        data.all_topics = this.all_topics.toObject();
                    }
                    if (this.topic_selector != null) {
                        data.topic_selector = this.topic_selector.toObject();
                    }
                    return data;
                }
                serialize(w) {
                    const writer = w || new pb_1.BinaryWriter();
                    if (this.role != _GenerateApiTokenRequest.TopicRole.TopicPermitNone)
                        writer.writeEnum(1, this.role);
                    if (this.has_all_caches)
                        writer.writeMessage(2, this.all_caches, () => this.all_caches.serialize(writer));
                    if (this.has_cache_selector)
                        writer.writeMessage(3, this.cache_selector, () => this.cache_selector.serialize(writer));
                    if (this.has_all_topics)
                        writer.writeMessage(4, this.all_topics, () => this.all_topics.serialize(writer));
                    if (this.has_topic_selector)
                        writer.writeMessage(5, this.topic_selector, () => this.topic_selector.serialize(writer));
                    if (!w)
                        return writer.getResultBuffer();
                }
                static deserialize(bytes) {
                    const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TopicPermissions();
                    while (reader.nextField()) {
                        if (reader.isEndGroup())
                            break;
                        switch (reader.getFieldNumber()) {
                            case 1:
                                message.role = reader.readEnum();
                                break;
                            case 2:
                                reader.readMessage(message.all_caches, () => message.all_caches = _GenerateApiTokenRequest.PermissionsType.All.deserialize(reader));
                                break;
                            case 3:
                                reader.readMessage(message.cache_selector, () => message.cache_selector = _GenerateApiTokenRequest.PermissionsType.CacheSelector.deserialize(reader));
                                break;
                            case 4:
                                reader.readMessage(message.all_topics, () => message.all_topics = _GenerateApiTokenRequest.PermissionsType.All.deserialize(reader));
                                break;
                            case 5:
                                reader.readMessage(message.topic_selector, () => message.topic_selector = _GenerateApiTokenRequest.PermissionsType.TopicSelector.deserialize(reader));
                                break;
                            default: reader.skipField();
                        }
                    }
                    return message;
                }
                serializeBinary() {
                    return this.serialize();
                }
                static deserializeBinary(bytes) {
                    return TopicPermissions.deserialize(bytes);
                }
            }
            _TopicPermissions_one_of_decls = new WeakMap();
            PermissionsType.TopicPermissions = TopicPermissions;
        })(PermissionsType = _GenerateApiTokenRequest.PermissionsType || (_GenerateApiTokenRequest.PermissionsType = {}));
    })(_GenerateApiTokenRequest = auth._GenerateApiTokenRequest || (auth._GenerateApiTokenRequest = {}));
    class _GenerateApiTokenResponse extends pb_1.Message {
        constructor(data) {
            super();
            __GenerateApiTokenResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __GenerateApiTokenResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("api_key" in data && data.api_key != undefined) {
                    this.api_key = data.api_key;
                }
                if ("refresh_token" in data && data.refresh_token != undefined) {
                    this.refresh_token = data.refresh_token;
                }
                if ("endpoint" in data && data.endpoint != undefined) {
                    this.endpoint = data.endpoint;
                }
                if ("valid_until" in data && data.valid_until != undefined) {
                    this.valid_until = data.valid_until;
                }
            }
        }
        get api_key() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set api_key(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get refresh_token() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set refresh_token(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get endpoint() {
            return pb_1.Message.getFieldWithDefault(this, 3, "");
        }
        set endpoint(value) {
            pb_1.Message.setField(this, 3, value);
        }
        get valid_until() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0);
        }
        set valid_until(value) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data) {
            const message = new _GenerateApiTokenResponse({});
            if (data.api_key != null) {
                message.api_key = data.api_key;
            }
            if (data.refresh_token != null) {
                message.refresh_token = data.refresh_token;
            }
            if (data.endpoint != null) {
                message.endpoint = data.endpoint;
            }
            if (data.valid_until != null) {
                message.valid_until = data.valid_until;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.api_key != null) {
                data.api_key = this.api_key;
            }
            if (this.refresh_token != null) {
                data.refresh_token = this.refresh_token;
            }
            if (this.endpoint != null) {
                data.endpoint = this.endpoint;
            }
            if (this.valid_until != null) {
                data.valid_until = this.valid_until;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.api_key.length)
                writer.writeString(1, this.api_key);
            if (this.refresh_token.length)
                writer.writeString(2, this.refresh_token);
            if (this.endpoint.length)
                writer.writeString(3, this.endpoint);
            if (this.valid_until != 0)
                writer.writeUint64(4, this.valid_until);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _GenerateApiTokenResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.api_key = reader.readString();
                        break;
                    case 2:
                        message.refresh_token = reader.readString();
                        break;
                    case 3:
                        message.endpoint = reader.readString();
                        break;
                    case 4:
                        message.valid_until = reader.readUint64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _GenerateApiTokenResponse.deserialize(bytes);
        }
    }
    __GenerateApiTokenResponse_one_of_decls = new WeakMap();
    auth._GenerateApiTokenResponse = _GenerateApiTokenResponse;
    class _RefreshApiTokenRequest extends pb_1.Message {
        constructor(data) {
            super();
            __RefreshApiTokenRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __RefreshApiTokenRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("api_key" in data && data.api_key != undefined) {
                    this.api_key = data.api_key;
                }
                if ("refresh_token" in data && data.refresh_token != undefined) {
                    this.refresh_token = data.refresh_token;
                }
            }
        }
        get api_key() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set api_key(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get refresh_token() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set refresh_token(value) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data) {
            const message = new _RefreshApiTokenRequest({});
            if (data.api_key != null) {
                message.api_key = data.api_key;
            }
            if (data.refresh_token != null) {
                message.refresh_token = data.refresh_token;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.api_key != null) {
                data.api_key = this.api_key;
            }
            if (this.refresh_token != null) {
                data.refresh_token = this.refresh_token;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.api_key.length)
                writer.writeString(1, this.api_key);
            if (this.refresh_token.length)
                writer.writeString(2, this.refresh_token);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _RefreshApiTokenRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.api_key = reader.readString();
                        break;
                    case 2:
                        message.refresh_token = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _RefreshApiTokenRequest.deserialize(bytes);
        }
    }
    __RefreshApiTokenRequest_one_of_decls = new WeakMap();
    auth._RefreshApiTokenRequest = _RefreshApiTokenRequest;
    class _RefreshApiTokenResponse extends pb_1.Message {
        constructor(data) {
            super();
            __RefreshApiTokenResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __RefreshApiTokenResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("api_key" in data && data.api_key != undefined) {
                    this.api_key = data.api_key;
                }
                if ("refresh_token" in data && data.refresh_token != undefined) {
                    this.refresh_token = data.refresh_token;
                }
                if ("endpoint" in data && data.endpoint != undefined) {
                    this.endpoint = data.endpoint;
                }
                if ("valid_until" in data && data.valid_until != undefined) {
                    this.valid_until = data.valid_until;
                }
            }
        }
        get api_key() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set api_key(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get refresh_token() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set refresh_token(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get endpoint() {
            return pb_1.Message.getFieldWithDefault(this, 3, "");
        }
        set endpoint(value) {
            pb_1.Message.setField(this, 3, value);
        }
        get valid_until() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0);
        }
        set valid_until(value) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data) {
            const message = new _RefreshApiTokenResponse({});
            if (data.api_key != null) {
                message.api_key = data.api_key;
            }
            if (data.refresh_token != null) {
                message.refresh_token = data.refresh_token;
            }
            if (data.endpoint != null) {
                message.endpoint = data.endpoint;
            }
            if (data.valid_until != null) {
                message.valid_until = data.valid_until;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.api_key != null) {
                data.api_key = this.api_key;
            }
            if (this.refresh_token != null) {
                data.refresh_token = this.refresh_token;
            }
            if (this.endpoint != null) {
                data.endpoint = this.endpoint;
            }
            if (this.valid_until != null) {
                data.valid_until = this.valid_until;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.api_key.length)
                writer.writeString(1, this.api_key);
            if (this.refresh_token.length)
                writer.writeString(2, this.refresh_token);
            if (this.endpoint.length)
                writer.writeString(3, this.endpoint);
            if (this.valid_until != 0)
                writer.writeUint64(4, this.valid_until);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _RefreshApiTokenResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.api_key = reader.readString();
                        break;
                    case 2:
                        message.refresh_token = reader.readString();
                        break;
                    case 3:
                        message.endpoint = reader.readString();
                        break;
                    case 4:
                        message.valid_until = reader.readUint64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _RefreshApiTokenResponse.deserialize(bytes);
        }
    }
    __RefreshApiTokenResponse_one_of_decls = new WeakMap();
    auth._RefreshApiTokenResponse = _RefreshApiTokenResponse;
    class UnimplementedAuthService {
    }
    UnimplementedAuthService.definition = {
        Login: {
            path: "/auth.Auth/Login",
            requestStream: false,
            responseStream: true,
            requestSerialize: (message) => Buffer.from(message.serialize()),
            requestDeserialize: (bytes) => _LoginRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message) => Buffer.from(message.serialize()),
            responseDeserialize: (bytes) => _LoginResponse.deserialize(new Uint8Array(bytes))
        },
        GenerateApiToken: {
            path: "/auth.Auth/GenerateApiToken",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message) => Buffer.from(message.serialize()),
            requestDeserialize: (bytes) => _GenerateApiTokenRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message) => Buffer.from(message.serialize()),
            responseDeserialize: (bytes) => _GenerateApiTokenResponse.deserialize(new Uint8Array(bytes))
        },
        RefreshApiToken: {
            path: "/auth.Auth/RefreshApiToken",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message) => Buffer.from(message.serialize()),
            requestDeserialize: (bytes) => _RefreshApiTokenRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message) => Buffer.from(message.serialize()),
            responseDeserialize: (bytes) => _RefreshApiTokenResponse.deserialize(new Uint8Array(bytes))
        }
    };
    auth.UnimplementedAuthService = UnimplementedAuthService;
    class AuthClient extends grpc_1.makeGenericClientConstructor(UnimplementedAuthService.definition, "Auth", {}) {
        constructor(address, credentials, options) {
            super(address, credentials, options);
            this.Login = (message, metadata, options) => {
                return super.Login(message, metadata, options);
            };
            this.GenerateApiToken = (message, metadata, options, callback) => {
                return super.GenerateApiToken(message, metadata, options, callback);
            };
            this.RefreshApiToken = (message, metadata, options, callback) => {
                return super.RefreshApiToken(message, metadata, options, callback);
            };
        }
    }
    auth.AuthClient = AuthClient;
})(auth = exports.auth || (exports.auth = {}));
