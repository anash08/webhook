/// <reference types="node" />
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.18.1
 * source: vectorindex.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
import * as grpc_1 from "@grpc/grpc-js";
export declare namespace vectorindex {
    export class _Item extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            id?: string;
            vector?: _Vector;
            metadata?: _Metadata[];
        });
        get id(): string;
        set id(value: string);
        get vector(): _Vector;
        set vector(value: _Vector);
        get has_vector(): boolean;
        get metadata(): _Metadata[];
        set metadata(value: _Metadata[]);
        static fromObject(data: {
            id?: string;
            vector?: ReturnType<typeof _Vector.prototype.toObject>;
            metadata?: ReturnType<typeof _Metadata.prototype.toObject>[];
        }): _Item;
        toObject(): {
            id?: string;
            vector?: ReturnType<typeof _Vector.prototype.toObject>;
            metadata?: ReturnType<typeof _Metadata.prototype.toObject>[];
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Item;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _Item;
    }
    export class _UpsertItemBatchRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            index_name?: string;
            items?: _Item[];
        });
        get index_name(): string;
        set index_name(value: string);
        get items(): _Item[];
        set items(value: _Item[]);
        static fromObject(data: {
            index_name?: string;
            items?: ReturnType<typeof _Item.prototype.toObject>[];
        }): _UpsertItemBatchRequest;
        toObject(): {
            index_name?: string;
            items?: ReturnType<typeof _Item.prototype.toObject>[];
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _UpsertItemBatchRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _UpsertItemBatchRequest;
    }
    export class _UpsertItemBatchResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            error_indices?: number[];
        });
        get error_indices(): number[];
        set error_indices(value: number[]);
        static fromObject(data: {
            error_indices?: number[];
        }): _UpsertItemBatchResponse;
        toObject(): {
            error_indices?: number[];
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _UpsertItemBatchResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _UpsertItemBatchResponse;
    }
    export class _Vector extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            elements?: number[];
        });
        get elements(): number[];
        set elements(value: number[]);
        static fromObject(data: {
            elements?: number[];
        }): _Vector;
        toObject(): {
            elements?: number[];
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Vector;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _Vector;
    }
    export class _Metadata extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({
            field?: string;
        } & (({
            string_value?: string;
        }))));
        get field(): string;
        set field(value: string);
        get string_value(): string;
        set string_value(value: string);
        get has_string_value(): boolean;
        get value(): "none" | "string_value";
        static fromObject(data: {
            field?: string;
            string_value?: string;
        }): _Metadata;
        toObject(): {
            field?: string;
            string_value?: string;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Metadata;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _Metadata;
    }
    export class _MetadataRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            some?: _MetadataRequest.Some;
        }))));
        get some(): _MetadataRequest.Some;
        set some(value: _MetadataRequest.Some);
        get has_some(): boolean;
        get kind(): "some" | "none";
        static fromObject(data: {
            some?: ReturnType<typeof _MetadataRequest.Some.prototype.toObject>;
        }): _MetadataRequest;
        toObject(): {
            some?: ReturnType<typeof _MetadataRequest.Some.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _MetadataRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _MetadataRequest;
    }
    export namespace _MetadataRequest {
        class Some extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                fields?: string[];
            });
            get fields(): string[];
            set fields(value: string[]);
            static fromObject(data: {
                fields?: string[];
            }): Some;
            toObject(): {
                fields?: string[];
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Some;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): Some;
        }
        class All extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): All;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): All;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): All;
        }
    }
    export class _SearchRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            index_name?: string;
            top_k?: number;
            query_vector?: _Vector;
            metadata_fields?: _MetadataRequest;
        });
        get index_name(): string;
        set index_name(value: string);
        get top_k(): number;
        set top_k(value: number);
        get query_vector(): _Vector;
        set query_vector(value: _Vector);
        get has_query_vector(): boolean;
        get metadata_fields(): _MetadataRequest;
        set metadata_fields(value: _MetadataRequest);
        get has_metadata_fields(): boolean;
        static fromObject(data: {
            index_name?: string;
            top_k?: number;
            query_vector?: ReturnType<typeof _Vector.prototype.toObject>;
            metadata_fields?: ReturnType<typeof _MetadataRequest.prototype.toObject>;
        }): _SearchRequest;
        toObject(): {
            index_name?: string;
            top_k?: number;
            query_vector?: ReturnType<typeof _Vector.prototype.toObject>;
            metadata_fields?: ReturnType<typeof _MetadataRequest.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SearchRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SearchRequest;
    }
    export class _SearchHit extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            id?: string;
            distance?: number;
            metadata?: _Metadata[];
        });
        get id(): string;
        set id(value: string);
        get distance(): number;
        set distance(value: number);
        get metadata(): _Metadata[];
        set metadata(value: _Metadata[]);
        static fromObject(data: {
            id?: string;
            distance?: number;
            metadata?: ReturnType<typeof _Metadata.prototype.toObject>[];
        }): _SearchHit;
        toObject(): {
            id?: string;
            distance?: number;
            metadata?: ReturnType<typeof _Metadata.prototype.toObject>[];
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SearchHit;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SearchHit;
    }
    export class _SearchResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            hits?: _SearchHit[];
        });
        get hits(): _SearchHit[];
        set hits(value: _SearchHit[]);
        static fromObject(data: {
            hits?: ReturnType<typeof _SearchHit.prototype.toObject>[];
        }): _SearchResponse;
        toObject(): {
            hits?: ReturnType<typeof _SearchHit.prototype.toObject>[];
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SearchResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SearchResponse;
    }
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    export abstract class UnimplementedVectorIndexService {
        static definition: {
            UpsertItemBatch: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _UpsertItemBatchRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _UpsertItemBatchRequest;
                responseSerialize: (message: _UpsertItemBatchResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _UpsertItemBatchResponse;
            };
            Search: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _SearchRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _SearchRequest;
                responseSerialize: (message: _SearchResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _SearchResponse;
            };
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract UpsertItemBatch(call: grpc_1.ServerUnaryCall<_UpsertItemBatchRequest, _UpsertItemBatchResponse>, callback: grpc_1.sendUnaryData<_UpsertItemBatchResponse>): void;
        abstract Search(call: grpc_1.ServerUnaryCall<_SearchRequest, _SearchResponse>, callback: grpc_1.sendUnaryData<_SearchResponse>): void;
    }
    const VectorIndexClient_base: grpc_1.ServiceClientConstructor;
    export class VectorIndexClient extends VectorIndexClient_base {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>);
        UpsertItemBatch: GrpcUnaryServiceInterface<_UpsertItemBatchRequest, _UpsertItemBatchResponse>;
        Search: GrpcUnaryServiceInterface<_SearchRequest, _SearchResponse>;
    }
    export {};
}
